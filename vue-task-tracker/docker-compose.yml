version: '3.8'

services:
  mongodb:
    image: mongo:6
    container_name: tasktracker-db
    restart: always
    volumes:
      - mongodb_data:/data/db
      - ./server/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    env_file:
      - .env.mongo
    command: --auth
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - backend-network

  backend:
    build:
      context: server
      target: production
    container_name: tasktracker-api
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env.backend
    environment:
      - NODE_ENV=production
    networks:
      - backend-network
      - proxy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: .
    container_name: tasktracker-ui
    restart: always
    networks:
      - proxy-network
      - backend-network

  reverse-proxy:
    image: nginx:alpine
    container_name: tasktracker-proxy
    restart: always
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - proxy-network

volumes:
  mongodb_data:

networks:
  backend-network:
    driver: bridge
    internal: true
  proxy-network:
    driver: bridge